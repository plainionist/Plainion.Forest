<UserControl x:Class="Plainion.Forest.Views.ExtendedTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:b="clr-namespace:Plainion.Forest.Behaviors"
             xmlns:pn="http://github.com/ronin4net/plainion"
             xmlns:v="clr-namespace:Plainion.Forest.Views"
             xmlns:prism="http://www.codeplex.com/prism"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300" Focusable="True">
    <DockPanel LastChildFill="True">
        <Grid DockPanel.Dock="Top"  HorizontalAlignment="Stretch">
            <pn:SearchTextBox SearchMode="Instant" Text="{Binding Path=Filter, Mode=TwoWay}" SearchEventTimeDelay="0" LabelText="Filter"/>
        </Grid>
        <TreeView Margin="0,3,0,0" ItemsSource="{Binding VisibleChildren}" BorderThickness="0" Focusable="True">
            <i:Interaction.Behaviors>
                <pn:FocusOnClickBehavior/>
                <pn:FrameworkElementDropBehavior/>
            </i:Interaction.Behaviors>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N"/>
                    <Separator/>
                    <MenuItem Header="Expand all" Command="{Binding ExpandAllCommand}" InputGestureText="Ctrl++"/>
                    <MenuItem Header="Collapse all" Command="{Binding CollapseAllCommand}" InputGestureText="Ctrl+-"/>
                </ContextMenu>
            </TreeView.ContextMenu>
            <TreeView.InputBindings>
                <KeyBinding Key="OemPlus" Modifiers="Control" Command="{Binding ExpandAllCommand}"/>
                <KeyBinding Key="OemMinus" Modifiers="Control" Command="{Binding CollapseAllCommand}"/>
                <KeyBinding Key="N" Modifiers="Control" Command="{Binding NewCommand}" />
            </TreeView.InputBindings>
            <TreeView.Resources>
                <!-- x:Shared="False" forces the new creation of that object whenever referenced -->
                <InputBindingCollection x:Shared="False" x:Key="InputBindings">
                    <KeyBinding Key="F2" Command="{Binding EditNodeCommand}"/>
                    <KeyBinding Key="N" Modifiers="Control" Command="{Binding NewCommand}" />
                </InputBindingCollection>
            </TreeView.Resources>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding VisibleChildren}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N"/>
                                <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                                <Separator/>
                                <MenuItem Header="Push back to origin" Command="{Binding PushBackToOriginCommand}"/>
                                <Separator/>
                                <MenuItem Header="Expand all" Command="{Binding ExpandAllCommand}" InputGestureText="Ctrl++"/>
                                <MenuItem Header="Collapse all" Command="{Binding CollapseAllCommand}" InputGestureText="Ctrl+-"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="Transparent">
                            <TextBlock VerticalAlignment="Center" Text="{Binding Caption}" Padding="3" HorizontalAlignment="Stretch" >
                                <i:Interaction.Behaviors>
                                    <b:DynamicToolTipBehavior Content="{Binding ToolTip}"/>
                                </i:Interaction.Behaviors>
                            </TextBlock>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding ContentHint}"
                                   Margin="5,0,0,0" Foreground="Green"/>
                            <i:Interaction.Behaviors>
                                <pn:FrameworkElementDragBehavior/>
                                <pn:DropSortableItemsBehavior/>
                            </i:Interaction.Behaviors>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <prism:InvokeCommandAction Command="{Binding MouseDownCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <!-- http://leecampbell.blogspot.de/2009/01/horizontal-stretch-on-treeviewitems.html -->
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                    <Setter Property="pn:InputBindingsExtension.InputBindings" Value="{StaticResource InputBindings}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <StackPanel>
                                    <Grid Margin="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" MinWidth="19" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <!--
                                        Note that the following do not work, but I believe the top 2 should?!
                                        <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                                        <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                                        <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                                        -->
                                        <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                      ClickMode="Press" Name="Expander">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="UIElement.Focusable" Value="false" />
                                                    <Setter Property="FrameworkElement.Width" Value="16" />
                                                    <Setter Property="FrameworkElement.Height" Value="16" />
                                                    <Setter Property="Control.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                                    <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                        <Path.Data>
                                                                            <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                        </Path.Data>
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                                    </Trigger>
                                                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                        <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd"
                                            HorizontalAlignment="Stretch"
                                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            Padding="{TemplateBinding Control.Padding}"
                                            Background="{TemplateBinding Panel.Background}"
                                            SnapsToDevicePixels="True"
                                            Grid.Column="1">
                                            <ContentPresenter x:Name="PART_Header"
                                                Content="{TemplateBinding HeaderedContentControl.Header}"
                                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                ContentSource="Header"
                                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch"/>
                                    </Grid>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                        <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems" Value="False">
                                        <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                        <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </DockPanel>
</UserControl>
